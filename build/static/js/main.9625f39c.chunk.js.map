{"version":3,"sources":["Media/Logo.svg","Media/Icon.svg","Layouts/Header.js","Layouts/Footer.js","Views/UsdTry.js","Views/EurTry.js","Views/EurUsd.js","Views/GauTry.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","href","className","type","data","FxtIcon","FxtLogo","Footer","react_router_dom","exact","to","activeClassName","UsdTry","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","sorting","target","value","handleScroll","document","body","scrollTop","documentElement","isSticky","state","allData","bind","assertThisInitialized","db","firebase","firestore","collection","where","onSnapshot","snapshot","allBankData","forEach","doc","push","_this2","error","console","getData","window","addEventListener","removeEventListener","bankRate","sort","b","parseFloat","bank_usd_rate","map","val","i","key","src","bank_img","alt","bank_name","bank_usd_buy","bank_usd_sell","bankSell","bankBuy","name","id","onChange","React","Component","EurTry","bank_eur_rate","bank_eur_buy","bank_eur_sell","EurUsd","bank_eurusd_rate","bank_eurusd_buy","bank_eurusd_sell","GauTry","bank_gau_rate","bank_gau_buy","bank_gau_sell","App","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","react","Layouts_Header","react_router","path","component","Layouts_Footer","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","catch","ReactDOM","render","src_App","getElementById","URL","process","origin","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9625f39c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.b7986f76.svg\";","module.exports = __webpack_public_path__ + \"static/media/Icon.131ad39d.svg\";","import React from 'react'\nimport './Header.css'\nimport FxtLogo from './../Media/Logo.svg'\nimport FxtIcon from './../Media/Icon.svg'\n\nfunction Header() {\n  return (\n    /* eslint-disable */\n    <header>\n      <a href='/' className='header_brand'>\n        <object\n          type='image/svg+xml'\n          data={FxtIcon}\n          className='header_brand__icon'\n        />\n        <object\n          type='image/svg+xml'\n          data={FxtLogo}\n          className='header_brand__logo'\n        />\n      </a>\n    </header>\n    /* eslint-enable */\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport './Footer.css'\nimport { NavLink } from 'react-router-dom'\n\nfunction Footer (){\n  return (\n    <footer>\n      <NavLink\n        exact\n        to='/'\n        className='switch_nav__item'\n        activeClassName='active'>\n        <span className='switch_nav__item--icon'>USD/TRY</span>\n        <span className='switch_nav__item--text'>Dolar</span>\n      </NavLink>\n      <NavLink\n        to='/euro-try'\n        className='switch_nav__item'\n        activeClassName='active'>\n        <span className='switch_nav__item--icon'>EUR/TRY</span>\n        <span className='switch_nav__item--text'>Euro</span>\n      </NavLink>\n      <NavLink\n        to='/euro-usd'\n        className='switch_nav__item'\n        activeClassName='active'>\n        <span className='switch_nav__item--icon'>EUR/USD</span>\n        <span className='switch_nav__item--text'>Euro</span>\n      </NavLink>\n      <NavLink\n        to='/gau-try'\n        className='switch_nav__item'\n        activeClassName='active'>\n        <span className='switch_nav__item--icon'>GAU/TRY</span>\n        <span className='switch_nav__item--text'>Gram Altın</span>\n      </NavLink>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport firebase from '@firebase/app'\nimport '@firebase/firestore'\nimport '@firebase/storage'\nimport './Views.css'\n\nclass UsdTry extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      sorting: 'bank_usd_rate',\n      allData: [],\n      isSticky: '',\n    }\n    this.handleScroll = this.handleScroll.bind(this)\n  }\n\n  handleChange = (event) => this.setState({ sorting: event.target.value })\n  handleScroll = () => {\n\n    document.body.scrollTop > 200 ||\n      document.documentElement.scrollTop > 200 ? this.setState({\n        isSticky: 'isfixed',\n      }) :\n      this.setState({ isSticky: '' })\n  }\n\n  async getData() {\n    const db = firebase.firestore()\n    await db\n      .collection('fxt_bank')\n      .where('bank_usd_rate', '<', '20000')\n      .onSnapshot(\n        (snapshot) => {\n          let allBankData = []\n          snapshot.forEach((doc) => {\n            allBankData.push(doc.data())\n          })\n          this.setState({\n            allData: allBankData,\n          })\n        },\n        (error) => {\n          console.error('Error!', error)\n        },\n      )\n  }\n\n  componentDidMount() {\n    this.getData()\n    window.addEventListener('scroll', this.handleScroll)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll)\n  }\n\n  render() {\n    const bankRate = this.state.allData\n      .sort(function (a, b) {\n        if (parseFloat(a.bank_usd_rate) > parseFloat(b.bank_usd_rate)) {\n          return 1\n        } else if (parseFloat(a.bank_usd_rate) < parseFloat(b.bank_usd_rate)) {\n          return -1\n        } else {\n          return 0\n        }\n      })\n      .map((val, i) => {\n        return (\n          <div key={i} className='bank_list__item'>\n            <div className='bank_list__rank'>{++i}.</div>\n            <div className='bank_list__media'>\n              <img\n                src={val.bank_img}\n                className='bank_list__media--img'\n                alt={val.bank_name + ' Logo'}\n              />\n            </div>\n            <div className='bank_list__content'>\n              <div className='bank_list__content--top'>\n                <div className='bank_list__name'>{val.bank_name}</div>\n                <div className='bank_list__exchange'>USD</div>\n              </div>\n              <div className='bank_list__content--bottom'>\n                <div className='bank_list__buy'>\n                  <div className='bank_list__buy--lbl'>Alış</div>\n                  <div className='bank_list__buy--val'>\n                    {val.bank_usd_buy} <span>&#8378;</span>\n                  </div>\n                </div>\n                <div className='bank_list__sell'>\n                  <div className='bank_list__buy--lbl'>Satış</div>\n                  <div className='bank_list__buy--val'>\n                    {val.bank_usd_sell} <span>&#8378;</span>\n                  </div>\n                </div>\n                <div className='bank_list__rate'>\n                  <div className='bank_list__buy--lbl'>Fark</div>\n                  <div className='bank_list__buy--val'>\n                    {val.bank_usd_rate} <span>&#8378;</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n      })\n    const bankSell = this.state.allData\n      .sort(function (a, b) {\n        if (parseFloat(a.bank_usd_sell) > parseFloat(b.bank_usd_sell)) {\n          return 1\n        } else if (parseFloat(a.bank_usd_sell) < parseFloat(b.bank_usd_sell)) {\n          return -1\n        } else {\n          return 0\n        }\n      })\n      .map((val, i) => {\n        return (\n          <div key={i} className='bank_list__item'>\n            <div className='bank_list__rank'>{++i}.</div>\n            <div className='bank_list__media'>\n              <img\n                src={val.bank_img}\n                className='bank_list__media--img'\n                alt={val.bank_name + ' Logo'}\n              />\n            </div>\n            <div className='bank_list__content'>\n              <div className='bank_list__content--top'>\n                <div className='bank_list__name'>{val.bank_name}</div>\n                <div className='bank_list__exchange'>USD</div>\n              </div>\n              <div className='bank_list__content--bottom'>\n                <div className='bank_list__buy'>\n                  <div className='bank_list__buy--lbl'>Alış</div>\n                  <div className='bank_list__buy--val'>\n                    {val.bank_usd_buy} <span>&#8378;</span>\n                  </div>\n                </div>\n                <div className='bank_list__sell'>\n                  <div className='bank_list__buy--lbl'>Satış</div>\n                  <div className='bank_list__buy--val'>\n                    {val.bank_usd_sell} <span>&#8378;</span>\n                  </div>\n                </div>\n                <div className='bank_list__rate'>\n                  <div className='bank_list__buy--lbl'>Fark</div>\n                  <div className='bank_list__buy--val'>\n                    {val.bank_usd_rate} <span>&#8378;</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n      })\n    const bankBuy = this.state.allData\n      .sort(function (a, b) {\n        if (parseFloat(a.bank_usd_buy) > parseFloat(b.bank_usd_buy)) {\n          return 1\n        } else if (parseFloat(a.bank_usd_buy) < parseFloat(b.bank_usd_buy)) {\n          return -1\n        } else {\n          return 0\n        }\n      })\n      .map((val, i) => {\n        return (\n          <div key={i} className='bank_list__item'>\n            <div className='bank_list__rank'>{++i}.</div>\n            <div className='bank_list__media'>\n              <img\n                src={val.bank_img}\n                className='bank_list__media--img'\n                alt={val.bank_name + ' Logo'}\n              />\n            </div>\n            <div className='bank_list__content'>\n              <div className='bank_list__content--top'>\n                <div className='bank_list__name'>{val.bank_name}</div>\n                <div className='bank_list__exchange'>USD</div>\n              </div>\n              <div className='bank_list__content--bottom'>\n                <div className='bank_list__buy'>\n                  <div className='bank_list__buy--lbl'>Alış</div>\n                  <div className='bank_list__buy--val'>\n                    {val.bank_usd_buy} <span>&#8378;</span>\n                  </div>\n                </div>\n                <div className='bank_list__sell'>\n                  <div className='bank_list__buy--lbl'>Satış</div>\n                  <div className='bank_list__buy--val'>\n                    {val.bank_usd_sell} <span>&#8378;</span>\n                  </div>\n                </div>\n                <div className='bank_list__rate'>\n                  <div className='bank_list__buy--lbl'>Fark</div>\n                  <div className='bank_list__buy--val'>\n                    {val.bank_usd_rate} <span>&#8378;</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n      })\n    return (\n      <div className='wrapper'>\n        <div className={'wrapper_header ' + this.state.isSticky}>\n          <h3>USD/TRY - Bankalar</h3>\n          <select\n            name='bank_filter'\n            id='bank_filter'\n            value={this.state.sorting}\n            onChange={this.handleChange}>\n            <option value='bank_usd_rate'>Fark - Artan</option>\n            <option value='bank_usd_sell'>Satış - Artan</option>\n            <option value='bank_usd_buy'>Alış - Artan</option>\n          </select>\n        </div>\n        <div className='wrapper_content bank_list'>\n          {\n            this.state.sorting === 'bank_usd_rate' ? bankRate :\n              this.state.sorting === 'bank_usd_sell' ? bankSell :\n                this.state.sorting === 'bank_usd_buy' ? bankBuy :\n                  'Tekrar Deneyiniz'}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default UsdTry\n","import React from 'react'\nimport firebase from '@firebase/app'\nimport '@firebase/firestore'\nimport '@firebase/storage'\nimport './Views.css'\n\nclass EurTry extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      sorting: 'bank_eur_rate',\n      allData: [],\n      isSticky: '',\n    }\n  }\n\n  handleChange = (event) => this.setState({ sorting: event.target.value })\n  handleScroll = () => {\n\n    document.body.scrollTop > 200 ||\n      document.documentElement.scrollTop > 200 ? this.setState({\n        isSticky: 'isfixed',\n      }) :\n      this.setState({ isSticky: '' })\n  }\n\n  async getData() {\n    const db = firebase.firestore()\n    await db\n      .collection('fxt_bank')\n      .where('bank_eur_rate', '<', '20000')\n      .onSnapshot(\n        (snapshot) => {\n          const allBankData = []\n          snapshot.forEach((doc) => {\n            allBankData.push(doc.data())\n          })\n          this.setState({\n            allData: allBankData,\n          })\n        },\n        (error) => {\n          console.error('Error!', error)\n        },\n      )\n  }\n\n  componentDidMount() {\n    this.getData()\n    window.addEventListener('scroll', this.handleScroll)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll)\n  }\n\n  render() {\n    const bankRate = this.state.allData\n      .sort(function (a, b) {\n        if (parseFloat(a.bank_eur_rate) > parseFloat(b.bank_eur_rate)) {\n          return 1\n        } else if (parseFloat(a.bank_eur_rate) < parseFloat(b.bank_eur_rate)) {\n          return -1\n        } else {\n          return 0\n        }\n      })\n      .map((val, i) => {\n        return (\n          <div key={i} className='bank_list__item'>\n            <div className='bank_list__rank'>{++i}.</div>\n            <div className='bank_list__media'>\n              <img\n                src={val.bank_img}\n                className='bank_list__media--img'\n                alt={val.bank_name + ' Logo'}\n              />\n            </div>\n            <div className='bank_list__content'>\n              <div className='bank_list__content--top'>\n                <div className='bank_list__name'>{val.bank_name}</div>\n                <div className='bank_list__exchange'>EUR</div>\n              </div>\n              <div className='bank_list__content--bottom'>\n                <div className='bank_list__buy'>\n                  <div className='bank_list__buy--lbl'>Alış</div>\n                  <div className='bank_list__buy--val'>\n                    {val.bank_eur_buy} <span>&#8378;</span>\n                  </div>\n                </div>\n                <div className='bank_list__sell'>\n                  <div className='bank_list__buy--lbl'>Satış</div>\n                  <div className='bank_list__buy--val'>\n                    {val.bank_eur_sell} <span>&#8378;</span>\n                  </div>\n                </div>\n                <div className='bank_list__rate'>\n                  <div className='bank_list__buy--lbl'>Fark</div>\n                  <div className='bank_list__buy--val'>\n                    {val.bank_eur_rate} <span>&#8378;</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n      })\n    const bankSell = this.state.allData\n      .sort(function (a, b) {\n        if (parseFloat(a.bank_eur_sell) > parseFloat(b.bank_eur_sell)) {\n          return 1\n        } else if (parseFloat(a.bank_eur_sell) < parseFloat(b.bank_eur_sell)) {\n          return -1\n        } else {\n          return 0\n        }\n      })\n      .map((val, i) => {\n        return (\n          <div key={i} className='bank_list__item'>\n            <div className='bank_list__rank'>{++i}.</div>\n            <div className='bank_list__media'>\n              <img\n                src={val.bank_img}\n                className='bank_list__media--img'\n                alt={val.bank_name + ' Logo'}\n              />\n            </div>\n            <div className='bank_list__content'>\n              <div className='bank_list__content--top'>\n                <div className='bank_list__name'>{val.bank_name}</div>\n                <div className='bank_list__exchange'>EUR</div>\n              </div>\n              <div className='bank_list__content--bottom'>\n                <div className='bank_list__buy'>\n                  <div className='bank_list__buy--lbl'>Alış</div>\n                  <div className='bank_list__buy--val'>\n                    {val.bank_eur_buy} <span>&#8378;</span>\n                  </div>\n                </div>\n                <div className='bank_list__sell'>\n                  <div className='bank_list__buy--lbl'>Satış</div>\n                  <div className='bank_list__buy--val'>\n                    {val.bank_eur_sell} <span>&#8378;</span>\n                  </div>\n                </div>\n                <div className='bank_list__rate'>\n                  <div className='bank_list__buy--lbl'>Fark</div>\n                  <div className='bank_list__buy--val'>\n                    {val.bank_eur_rate} <span>&#8378;</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n      })\n    const bankBuy = this.state.allData\n      .sort(function (a, b) {\n        if (parseFloat(a.bank_eur_buy) > parseFloat(b.bank_eur_buy)) {\n          return 1\n        } else if (parseFloat(a.bank_eur_buy) < parseFloat(b.bank_eur_buy)) {\n          return -1\n        } else {\n          return 0\n        }\n      })\n      .map((val, i) => {\n        return (\n          <div key={i} className='bank_list__item'>\n            <div className='bank_list__rank'>{++i}.</div>\n            <div className='bank_list__media'>\n              <img\n                src={val.bank_img}\n                className='bank_list__media--img'\n                alt={val.bank_name + ' Logo'}\n              />\n            </div>\n            <div className='bank_list__content'>\n              <div className='bank_list__content--top'>\n                <div className='bank_list__name'>{val.bank_name}</div>\n                <div className='bank_list__exchange'>EUR</div>\n              </div>\n              <div className='bank_list__content--bottom'>\n                <div className='bank_list__buy'>\n                  <div className='bank_list__buy--lbl'>Alış</div>\n                  <div className='bank_list__buy--val'>\n                    {val.bank_eur_buy} <span>&#8378;</span>\n                  </div>\n                </div>\n                <div className='bank_list__sell'>\n                  <div className='bank_list__buy--lbl'>Satış</div>\n                  <div className='bank_list__buy--val'>\n                    {val.bank_eur_sell} <span>&#8378;</span>\n                  </div>\n                </div>\n                <div className='bank_list__rate'>\n                  <div className='bank_list__buy--lbl'>Fark</div>\n                  <div className='bank_list__buy--val'>\n                    {val.bank_eur_rate} <span>&#8378;</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n      })\n    return (\n      <div className='wrapper'>\n        <div className={'wrapper_header ' + this.state.isSticky}>\n          <h3>EUR/TRY - Bankalar</h3>\n          <select\n            name='bank_filter'\n            id='bank_filter'\n            value={this.state.sorting}\n            onChange={this.handleChange}>\n            <option value='bank_eur_rate'>Fark - Artan</option>\n            <option value='bank_eur_sell'>Satış - Artan</option>\n            <option value='bank_eur_buy'>Alış - Artan</option>\n          </select>\n        </div>\n        <div className='wrapper_content bank_list'>\n          {\n            this.state.sorting === 'bank_eur_rate' ? bankRate :\n              this.state.sorting === 'bank_eur_sell' ? bankSell :\n                this.state.sorting === 'bank_eur_buy' ? bankBuy :\n                  'Tekrar Deneyiniz'}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default EurTry\n","import React from 'react'\nimport firebase from '@firebase/app'\nimport '@firebase/firestore'\nimport '@firebase/storage'\nimport './Views.css'\n\nclass EurUsd extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      sorting: 'bank_eurusd_rate',\n      allData: [],\n      isSticky: '',\n    }\n  }\n\n  handleChange = (event) => this.setState({ sorting: event.target.value })\n  handleScroll = () => {\n\n    document.body.scrollTop > 200 ||\n      document.documentElement.scrollTop > 200 ? this.setState({\n        isSticky: 'isfixed',\n      }) :\n      this.setState({ isSticky: '' })\n  }\n\n  async getData() {\n    const db = firebase.firestore()\n    await db\n      .collection('fxt_bank')\n      .where('bank_eurusd_rate', '<', '20000')\n      .onSnapshot(\n        (snapshot) => {\n          const allBankData = []\n          snapshot.forEach((doc) => {\n            allBankData.push(doc.data())\n          })\n          this.setState({\n            allData: allBankData,\n          })\n        },\n        (error) => {\n          console.error('Error!', error)\n        },\n      )\n  }\n\n  componentDidMount() {\n    this.getData()\n    window.addEventListener('scroll', this.handleScroll)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll)\n  }\n\n  render() {\n    const bankRate = this.state.allData\n      .sort(function (a, b) {\n        if (parseFloat(a.bank_eurusd_rate) > parseFloat(b.bank_eurusd_rate)) {\n          return 1\n        } else if (\n          parseFloat(a.bank_eurusd_rate) < parseFloat(b.bank_eurusd_rate)\n        ) {\n          return -1\n        } else {\n          return 0\n        }\n      })\n      .map((val, i) => {\n        return (\n          <div key={i} className='bank_list__item'>\n            <div className='bank_list__rank'>{++i}.</div>\n            <div className='bank_list__media'>\n              <img\n                src={val.bank_img}\n                className='bank_list__media--img'\n                alt={val.bank_name + ' Logo'}\n              />\n            </div>\n            <div className='bank_list__content'>\n              <div className='bank_list__content--top'>\n                <div className='bank_list__name'>{val.bank_name}</div>\n                <div className='bank_list__exchange'>EUR</div>\n              </div>\n              <div className='bank_list__content--bottom'>\n                <div className='bank_list__buy'>\n                  <div className='bank_list__buy--lbl'>Alış</div>\n                  <div className='bank_list__buy--val'>\n                    {val.bank_eurusd_buy} <span>&#36;</span>\n                  </div>\n                </div>\n                <div className='bank_list__sell'>\n                  <div className='bank_list__buy--lbl'>Satış</div>\n                  <div className='bank_list__buy--val'>\n                    {val.bank_eurusd_sell} <span>&#36;</span>\n                  </div>\n                </div>\n                <div className='bank_list__rate'>\n                  <div className='bank_list__buy--lbl'>Fark</div>\n                  <div className='bank_list__buy--val'>\n                    {val.bank_eurusd_rate} <span>&#36;</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n      })\n    const bankSell = this.state.allData\n      .sort(function (a, b) {\n        if (parseFloat(a.bank_eurusd_sell) > parseFloat(b.bank_eurusd_sell)) {\n          return 1\n        } else if (\n          parseFloat(a.bank_eurusd_sell) < parseFloat(b.bank_eurusd_sell)\n        ) {\n          return -1\n        } else {\n          return 0\n        }\n      })\n      .map((val, i) => {\n        return (\n          <div key={i} className='bank_list__item'>\n            <div className='bank_list__rank'>{++i}.</div>\n            <div className='bank_list__media'>\n              <img\n                src={val.bank_img}\n                className='bank_list__media--img'\n                alt={val.bank_name + ' Logo'}\n              />\n            </div>\n            <div className='bank_list__content'>\n              <div className='bank_list__content--top'>\n                <div className='bank_list__name'>{val.bank_name}</div>\n                <div className='bank_list__exchange'>EUR</div>\n              </div>\n              <div className='bank_list__content--bottom'>\n                <div className='bank_list__buy'>\n                  <div className='bank_list__buy--lbl'>Alış</div>\n                  <div className='bank_list__buy--val'>\n                    {val.bank_eurusd_buy} <span>&#36;</span>\n                  </div>\n                </div>\n                <div className='bank_list__sell'>\n                  <div className='bank_list__buy--lbl'>Satış</div>\n                  <div className='bank_list__buy--val'>\n                    {val.bank_eurusd_sell} <span>&#36;</span>\n                  </div>\n                </div>\n                <div className='bank_list__rate'>\n                  <div className='bank_list__buy--lbl'>Fark</div>\n                  <div className='bank_list__buy--val'>\n                    {val.bank_eurusd_rate} <span>&#36;</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n      })\n    const bankBuy = this.state.allData\n      .sort(function (a, b) {\n        if (parseFloat(a.bank_eurusd_buy) > parseFloat(b.bank_eurusd_buy)) {\n          return 1\n        } else if (\n          parseFloat(a.bank_eurusd_buy) < parseFloat(b.bank_eurusd_buy)\n        ) {\n          return -1\n        } else {\n          return 0\n        }\n      })\n      .map((val, i) => {\n        return (\n          <div key={i} className='bank_list__item'>\n            <div className='bank_list__rank'>{++i}.</div>\n            <div className='bank_list__media'>\n              <img\n                src={val.bank_img}\n                className='bank_list__media--img'\n                alt={val.bank_name + ' Logo'}\n              />\n            </div>\n            <div className='bank_list__content'>\n              <div className='bank_list__content--top'>\n                <div className='bank_list__name'>{val.bank_name}</div>\n                <div className='bank_list__exchange'>EUR</div>\n              </div>\n              <div className='bank_list__content--bottom'>\n                <div className='bank_list__buy'>\n                  <div className='bank_list__buy--lbl'>Alış</div>\n                  <div className='bank_list__buy--val'>\n                    {val.bank_eurusd_buy} <span>&#36;</span>\n                  </div>\n                </div>\n                <div className='bank_list__sell'>\n                  <div className='bank_list__buy--lbl'>Satış</div>\n                  <div className='bank_list__buy--val'>\n                    {val.bank_eurusd_sell} <span>&#36;</span>\n                  </div>\n                </div>\n                <div className='bank_list__rate'>\n                  <div className='bank_list__buy--lbl'>Fark</div>\n                  <div className='bank_list__buy--val'>\n                    {val.bank_eurusd_rate} <span>&#36;</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n      })\n    return (\n      <div className='wrapper'>\n        <div className='wrapper_header'>\n          <h3>EUR/USD - Bankalar</h3>\n          <select\n            name='bank_filter'\n            id='bank_filter'\n            value={this.state.sorting}\n            onChange={this.handleChange}>\n            <option value='bank_eurusd_rate'>Fark - Artan</option>\n            <option value='bank_eurusd_sell'>Satış - Artan</option>\n            <option value='bank_eurusd_buy'>Alış - Artan</option>\n          </select>\n        </div>\n        <div className='wrapper_content bank_list'>\n          {\n            this.state.sorting === 'bank_eurusd_rate' ? bankRate :\n              this.state.sorting === 'bank_eurusd_sell' ? bankSell :\n                this.state.sorting === 'bank_eurusd_buy' ? bankBuy :\n                  'Tekrar Deneyiniz'}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default EurUsd\n","import React from 'react'\nimport firebase from '@firebase/app'\nimport '@firebase/firestore'\nimport '@firebase/storage'\nimport './Views.css'\n\nclass GauTry extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      sorting: 'bank_gau_rate',\n      allData: [],\n      isSticky: '',\n    }\n  }\n\n  handleChange = (event) => this.setState({ sorting: event.target.value })\n  handleScroll = () => {\n\n    document.body.scrollTop > 200 ||\n      document.documentElement.scrollTop > 200 ? this.setState({\n        isSticky: 'isfixed',\n      }) :\n      this.setState({ isSticky: '' })\n  }\n\n  async getData() {\n    const db = firebase.firestore()\n    await db.collection('fxt_bank').where('bank_gau_rate', '>', '0').onSnapshot(\n      (snapshot) => {\n        const allBankData = []\n        snapshot.forEach((doc) => {\n          allBankData.push(doc.data())\n        })\n        this.setState({\n          allData: allBankData,\n        })\n      },\n      (error) => {\n        console.error('Error!', error)\n      },\n    )\n  }\n\n  componentDidMount() {\n    this.getData()\n    window.addEventListener('scroll', this.handleScroll)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll)\n  }\n\n  render() {\n    const bankRate = this.state.allData\n      .sort(function (a, b) {\n        if (parseFloat(a.bank_gau_rate) > parseFloat(b.bank_gau_rate)) {\n          return 1\n        } else if (parseFloat(a.bank_gau_rate) < parseFloat(b.bank_gau_rate)) {\n          return -1\n        } else {\n          return 0\n        }\n      })\n      .map((val, i) => {\n        return (\n          <div key={i} className='bank_list__item'>\n            <div className='bank_list__rank'>{++i}.</div>\n            <div className='bank_list__media'>\n              <img\n                src={val.bank_img}\n                className='bank_list__media--img'\n                alt={val.bank_name + ' Logo'}\n              />\n            </div>\n            <div className='bank_list__content'>\n              <div className='bank_list__content--top'>\n                <div className='bank_list__name'>{val.bank_name}</div>\n                <div className='bank_list__exchange'>GAU</div>\n              </div>\n              <div className='bank_list__content--bottom'>\n                <div className='bank_list__buy'>\n                  <div className='bank_list__buy--lbl'>Alış</div>\n                  <div className='bank_list__buy--val'>\n                    {val.bank_gau_buy} <span>&#8378;</span>\n                  </div>\n                </div>\n                <div className='bank_list__sell'>\n                  <div className='bank_list__buy--lbl'>Satış</div>\n                  <div className='bank_list__buy--val'>\n                    {val.bank_gau_sell} <span>&#8378;</span>\n                  </div>\n                </div>\n                <div className='bank_list__rate'>\n                  <div className='bank_list__buy--lbl'>Fark</div>\n                  <div className='bank_list__buy--val'>\n                    {val.bank_gau_rate} <span>&#8378;</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n      })\n    const bankSell = this.state.allData\n      .sort(function (a, b) {\n        if (parseFloat(a.bank_gau_sell) > parseFloat(b.bank_gau_sell)) {\n          return 1\n        } else if (parseFloat(a.bank_gau_sell) < parseFloat(b.bank_gau_sell)) {\n          return -1\n        } else {\n          return 0\n        }\n      })\n      .map((val, i) => {\n        return (\n          <div key={i} className='bank_list__item'>\n            <div className='bank_list__rank'>{++i}.</div>\n            <div className='bank_list__media'>\n              <img\n                src={val.bank_img}\n                className='bank_list__media--img'\n                alt={val.bank_name + ' Logo'}\n              />\n            </div>\n            <div className='bank_list__content'>\n              <div className='bank_list__content--top'>\n                <div className='bank_list__name'>{val.bank_name}</div>\n                <div className='bank_list__exchange'>GAU</div>\n              </div>\n              <div className='bank_list__content--bottom'>\n                <div className='bank_list__buy'>\n                  <div className='bank_list__buy--lbl'>Alış</div>\n                  <div className='bank_list__buy--val'>\n                    {val.bank_gau_buy} <span>&#8378;</span>\n                  </div>\n                </div>\n                <div className='bank_list__sell'>\n                  <div className='bank_list__buy--lbl'>Satış</div>\n                  <div className='bank_list__buy--val'>\n                    {val.bank_gau_sell} <span>&#8378;</span>\n                  </div>\n                </div>\n                <div className='bank_list__rate'>\n                  <div className='bank_list__buy--lbl'>Fark</div>\n                  <div className='bank_list__buy--val'>\n                    {val.bank_gau_rate} <span>&#8378;</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n      })\n    const bankBuy = this.state.allData\n      .sort(function (a, b) {\n        if (parseFloat(a.bank_gau_buy) > parseFloat(b.bank_gau_buy)) {\n          return 1\n        } else if (parseFloat(a.bank_gau_buy) < parseFloat(b.bank_gau_buy)) {\n          return -1\n        } else {\n          return 0\n        }\n      })\n      .map((val, i) => {\n        return (\n          <div key={i} className='bank_list__item'>\n            <div className='bank_list__rank'>{++i}.</div>\n            <div className='bank_list__media'>\n              <img\n                src={val.bank_img}\n                className='bank_list__media--img'\n                alt={val.bank_name + ' Logo'}\n              />\n            </div>\n            <div className='bank_list__content'>\n              <div className='bank_list__content--top'>\n                <div className='bank_list__name'>{val.bank_name}</div>\n                <div className='bank_list__exchange'>GAU</div>\n              </div>\n              <div className='bank_list__content--bottom'>\n                <div className='bank_list__buy'>\n                  <div className='bank_list__buy--lbl'>Alış</div>\n                  <div className='bank_list__buy--val'>\n                    {val.bank_gau_buy} <span>&#8378;</span>\n                  </div>\n                </div>\n                <div className='bank_list__sell'>\n                  <div className='bank_list__buy--lbl'>Satış</div>\n                  <div className='bank_list__buy--val'>\n                    {val.bank_gau_sell} <span>&#8378;</span>\n                  </div>\n                </div>\n                <div className='bank_list__rate'>\n                  <div className='bank_list__buy--lbl'>Fark</div>\n                  <div className='bank_list__buy--val'>\n                    {val.bank_gau_rate} <span>&#8378;</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n      })\n    return (\n      <div className='wrapper'>\n        <div className={'wrapper_header ' + this.state.isSticky}>\n          <h3>GAU/TRY - Bankalar</h3>\n          <select\n            name='bank_filter'\n            id='bank_filter'\n            value={this.state.sorting}\n            onChange={this.handleChange}>\n            <option value='bank_gau_rate'>Fark - Artan</option>\n            <option value='bank_gau_sell'>Satış - Artan</option>\n            <option value='bank_gau_buy'>Alış - Artan</option>\n          </select>\n        </div>\n        <div className='wrapper_content bank_list'>\n          {\n            this.state.sorting === 'bank_gau_rate' ? bankRate :\n              this.state.sorting === 'bank_gau_sell' ? bankSell :\n                this.state.sorting === 'bank_gau_buy' ? bankBuy :\n                  'Tekrar Deneyiniz'}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default GauTry\n","import React, { Fragment } from 'react'\nimport firebase from '@firebase/app'\nimport { BrowserRouter as Switch, Route } from 'react-router-dom'\nimport './App.css'\nimport Header from './Layouts/Header'\nimport Footer from './Layouts/Footer'\nimport UsdTry from './Views/UsdTry'\nimport EurTry from './Views/EurTry'\nimport EurUsd from './Views/EurUsd'\nimport GauTry from './Views/GauTry'\n\nfunction App() {\n  if (!firebase.apps.length) {\n    firebase.initializeApp({\n      apiKey: 'AIzaSyDaDTyar5_65FEYe5vyhNp6_URutgUt6uY',\n      authDomain: 'forextakip-web.firebaseapp.com',\n      databaseURL: 'https://forextakip-web.firebaseio.com',\n      projectId: 'forextakip-web',\n      storageBucket: 'forextakip-web.appspot.com',\n      messagingSenderId: '700987906788',\n    })\n  }\n  return (\n    <Fragment>\n      <Switch>\n        <Header />\n        <Route exact path='/' component={UsdTry} />\n        <Route path='/euro-try' component={EurTry} />\n        <Route path='/euro-usd' component={EurUsd} />\n        <Route path='/gau-try' component={GauTry} />\n        <Footer />\n      </Switch>\n    </Fragment>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\nserviceWorker.register()\n"],"sourceRoot":""}